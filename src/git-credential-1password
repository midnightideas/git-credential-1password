#!/usr/bin/env bash

if echo "protocol=https
hosts=test
username=test
" | git credential-cache fill >/dev/null 2>&1; then
  TOKEN_MANAGER=credential-cache
else
  TOKEN_MANAGER=credential-store
fi

function cache_op_session() {
  ACCOUNT="$1"
  TOKEN="$2"

  echo "protocol=https
host=$ACCOUNT
username=$ACCOUNT
password=$TOKEN
" | git "$TOKEN_MANAGER" store
}

function get_op_session() {
  ACCOUNT="$1"

  echo "protocol=https
host=$ACCOUNT
username=$ACCOUNT
" | git "$TOKEN_MANAGER" get | grep 'password=' | cut -d= -f2
}

function reset_op_session() {
  ACCOUNT="$1"

  echo "protocol=https
host=$ACCOUNT
username=$ACCOUNT
" | git "$TOKEN_MANAGER" erase
}

function get_credential() {
  ACCOUNT="$1"
  NAME="$2"

  OP_SESSION="--account=$ACCOUNT --session=$(get_op_session "$ACCOUNT")"

  if ! op list vaults $OP_SESSION >/dev/null 2>&1; then
    TOKEN="$(op signin "$ACCOUNT" --output=raw </dev/tty)"
    cache_op_session "$ACCOUNT" "$TOKEN"
    OP_SESSION="--account=$ACCOUNT --session=$(get_op_session "$ACCOUNT")"
  fi

  CREDENTIAL="$(op get item "$NAME" $OP_SESSION --fields username,password --format CSV)"

  echo username="$(echo "$CREDENTIAL" | cut -d, -f1)"
  echo password="$(echo "$CREDENTIAL" | cut -d, -f2)"
}

case "$3" in

'get')
  get_credential "$1" "$2"
  ;;

'erase')
  reset_op_session "$1" "$2"
  ;;

esac
